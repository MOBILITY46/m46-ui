{"version":3,"sources":["../../../src/card/use-flip-card.ts"],"names":["useFlipCard","face","setFace","getTriggerProps","props","_ref","onClick","_event","f"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;AAIO,SAASA,WAAT,GAAuB;AAC5B,kBAAwB,qBAAmB,OAAnB,CAAxB;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,eAAe,GAAG,wBACtB;AAAA,QAACC,KAAD,uEAAS,EAAT;;AAAA,QAAaC,IAAb,uEAAoB,IAApB;;AAAA,2CACKD,KADL;AAEEE,MAAAA,OAAO,EAAE,4BAAgB,UAACC,MAAD,EAAY;AACnCL,QAAAA,OAAO,CAAC,UAACM,CAAD;AAAA,iBAAQA,CAAC,KAAK,OAAN,GAAgB,MAAhB,GAAyB,OAAjC;AAAA,SAAD,CAAP;AACD,OAFQ;AAFX;AAAA,GADsB,EAOtB,EAPsB,CAAxB;AAUA,SAAO;AACLP,IAAAA,IAAI,EAAJA,IADK;AAELE,IAAAA,eAAe,EAAfA;AAFK,GAAP;AAID","sourcesContent":["import { useCallback, useState } from 'react'\nimport { callAllHandlers } from '../utils'\n\nexport type CardFace = 'front' | 'back'\n\nexport function useFlipCard() {\n  const [face, setFace] = useState<CardFace>('front')\n\n  const getTriggerProps = useCallback(\n    (props = {}, _ref = null) => ({\n      ...props,\n      onClick: callAllHandlers((_event) => {\n        setFace((f) => (f === 'front' ? 'back' : 'front'))\n      }),\n    }),\n    [],\n  )\n\n  return {\n    face,\n    getTriggerProps,\n  }\n}\n\nexport type UseFlipCardReturn = ReturnType<typeof useFlipCard>\n"],"file":"use-flip-card.js"}