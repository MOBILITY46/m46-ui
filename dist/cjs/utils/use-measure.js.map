{"version":3,"sources":["../../../src/utils/use-measure.ts"],"names":["useMeasure","element","attachRef","bounds","setBounds","onResize","entry","contentRect","width","height","observer","ResizeObserver","observe","disconnect","ref"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;AAEO,SAASA,UAAT,GAAsB;AAC3B,wBAA6B,sCAA7B;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,SAAhB;;AACA,kBAA4B,qBAAS,EAAT,CAA5B;AAAA;AAAA,MAAOC,MAAP;AAAA,MAAeC,SAAf;;AAEA,8BAAgB,YAAM;AACpB,aAASC,QAAT,OAAkD;AAAA;AAAA,UAA/BC,KAA+B;;AAChD,+BAA0BA,KAAK,CAACC,WAAhC;AAAA,UAAQC,KAAR,sBAAQA,KAAR;AAAA,UAAeC,MAAf,sBAAeA,MAAf;AACAL,MAAAA,SAAS,CAAC;AACRK,QAAAA,MAAM,EAANA,MADQ;AAERD,QAAAA,KAAK,EAALA;AAFQ,OAAD,CAAT;AAID;;AAED,QAAME,QAAQ,GAAG,IAAIC,kCAAJ,CAAmBN,QAAnB,CAAjB;;AAEA,QAAIJ,OAAJ,EAAa;AACXS,MAAAA,QAAQ,CAACE,OAAT,CAAiBX,OAAjB;AACD;;AAED,WAAO,YAAM;AACXS,MAAAA,QAAQ,CAACG,UAAT;AACD,KAFD;AAGD,GAlBD,EAkBG,CAACZ,OAAD,CAlBH;AAoBA,SAAO;AACLE,IAAAA,MAAM,EAANA,MADK;AAELW,IAAAA,GAAG,EAAEZ;AAFA,GAAP;AAID","sourcesContent":["import ResizeObserver from 'resize-observer-polyfill'\nimport { useCallbackRef } from './use-callback-ref'\nimport { useState, useLayoutEffect } from 'react'\n\nexport function useMeasure() {\n  const [element, attachRef] = useCallbackRef()\n  const [bounds, setBounds] = useState({})\n\n  useLayoutEffect(() => {\n    function onResize([entry]: ResizeObserverEntry[]) {\n      const { width, height } = entry.contentRect\n      setBounds({\n        height,\n        width,\n      })\n    }\n\n    const observer = new ResizeObserver(onResize)\n\n    if (element) {\n      observer.observe(element as any)\n    }\n\n    return () => {\n      observer.disconnect()\n    }\n  }, [element])\n\n  return {\n    bounds,\n    ref: attachRef,\n  }\n}\n"],"file":"use-measure.js"}