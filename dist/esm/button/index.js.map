{"version":3,"sources":["../../../src/button/index.tsx"],"names":["React","Button","ChakraButton","colorScheme","variant","rounded","props","p","Object","assign","fontSize","borderRadius","fontWeight"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,MAAM,IAAIC,YAAnB,QAAqF,kBAArF;;AAYA;AACA;AACA;AAEA,OAAO,IAAMD,MAAwD,GAAG,QAKrD;AAAA,MALsD;AACvEE,IAAAA,WAAW,GAAG,SADyD;AAEvEC,IAAAA,OAAO,GAAG,OAF6D;AAGvEC,IAAAA,OAAO,GAAG;AAH6D,GAKtD;AAAA,MADdC,KACc;;AACjB,MAAMC,CAAC,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,KAAlB,EAAyB;AACjCF,IAAAA,OADiC;AAEjCM,IAAAA,QAAQ,EAAE,UAFuB;AAGjCC,IAAAA,YAAY,EAAEN,OAAO,GAAG,MAAH,GAAY,CAHA;AAIjCO,IAAAA,UAAU,EAAE,GAJqB;AAKjCT,IAAAA;AALiC,GAAzB,CAAV;AAQA,sBAAO,oBAAC,YAAD,EAAkBI,CAAlB,CAAP;AACD,CAfM","sourcesContent":["import * as React from 'react'\nimport { FC } from 'react'\nimport { Button as ChakraButton, StyleProps, ButtonProps as ChakraButtonProps } from '@chakra-ui/react'\nimport { Color } from '../theme'\n\nexport interface ButtonProps {\n  colorScheme?: Color\n  variant?: 'solid' | 'outline' | 'link' | 'ghost'\n  rounded?: boolean\n  leftIcon?: JSX.Element\n  rightIcon?: JSX.Element\n  size?: 'lg' | 'md' | 'sm' | 'xs'\n}\n\n/**\n * A Chakra button with some overridden values.\n */\n\nexport const Button: FC<ButtonProps & StyleProps & ChakraButtonProps> = ({\n  colorScheme = 'primary',\n  variant = 'solid',\n  rounded = true,\n  ...props\n}: ButtonProps) => {\n  const p = Object.assign({}, props, {\n    variant,\n    fontSize: '1.125rem',\n    borderRadius: rounded ? '10px' : 0,\n    fontWeight: 500,\n    colorScheme,\n  })\n\n  return <ChakraButton {...p} />\n}\n"],"file":"index.js"}