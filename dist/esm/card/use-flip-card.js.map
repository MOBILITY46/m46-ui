{"version":3,"sources":["../../../src/card/use-flip-card.ts"],"names":["useCallback","useState","callAllHandlers","useFlipCard","face","setFace","getTriggerProps","props","_ref","onClick","_event","f"],"mappings":";;;;;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,SAASC,eAAT,QAAgC,UAAhC;AAIA,OAAO,SAASC,WAAT,GAAuB;AAC5B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAW,OAAX,CAAhC;AAEA,MAAMK,eAAe,GAAGN,WAAW,CACjC;AAAA,QAACO,KAAD,uEAAS,EAAT;;AAAA,QAAaC,IAAb,uEAAoB,IAApB;;AAAA,2CACKD,KADL;AAEEE,MAAAA,OAAO,EAAEP,eAAe,CAAEQ,MAAD,IAAY;AACnCL,QAAAA,OAAO,CAAEM,CAAD,IAAQA,CAAC,KAAK,OAAN,GAAgB,MAAhB,GAAyB,OAAlC,CAAP;AACD,OAFuB;AAF1B;AAAA,GADiC,EAOjC,EAPiC,CAAnC;AAUA,SAAO;AACLP,IAAAA,IADK;AAELE,IAAAA;AAFK,GAAP;AAID","sourcesContent":["import { useCallback, useState } from 'react'\nimport { callAllHandlers } from '../utils'\n\nexport type CardFace = 'front' | 'back'\n\nexport function useFlipCard() {\n  const [face, setFace] = useState<CardFace>('front')\n\n  const getTriggerProps = useCallback(\n    (props = {}, _ref = null) => ({\n      ...props,\n      onClick: callAllHandlers((_event) => {\n        setFace((f) => (f === 'front' ? 'back' : 'front'))\n      }),\n    }),\n    [],\n  )\n\n  return {\n    face,\n    getTriggerProps,\n  }\n}\n\nexport type UseFlipCardReturn = ReturnType<typeof useFlipCard>\n"],"file":"use-flip-card.js"}