{"version":3,"sources":["../../../src/checkbox/checkbox.tsx"],"names":["React","useState","Box","motion","useMotionValue","useTransform","tickVariants","pressed","isChecked","pathLength","checked","unchecked","boxVariants","hover","scale","strokeWidth","stroke","Checkbox","props","setIsChecked","opacity","size"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { useState } from 'react'\nimport { Box } from '@chakra-ui/react'\nimport { motion, useMotionValue, useTransform } from 'framer-motion'\n\nexport interface CheckboxProps {\n  size?: string | number\n}\n\nconst tickVariants = {\n  pressed: (isChecked: boolean) => ({ pathLength: isChecked ? 0.85 : 0.2 }),\n  checked: { pathLength: 1 },\n  unchecked: { pathLength: 0 },\n}\n\nconst boxVariants = {\n  hover: { scale: 1.05, strokeWidth: 60 },\n  pressed: { scale: 0.95, strokeWidth: 35 },\n  checked: { stroke: '#1E90FF' },\n  unchecked: { stroke: '#ddd', strokeWidth: 50 },\n}\n\nexport const Checkbox = (props: CheckboxProps) => {\n  const [isChecked, setIsChecked] = useState(false)\n  const pathLength = useMotionValue(0)\n  const opacity = useTransform(pathLength, [0.05, 0.15], [0, 1])\n\n  return (\n    <Box w={props.size || '24px'}>\n      <motion.svg\n        initial={false}\n        animate={isChecked ? 'checked' : 'unchecked'}\n        whileHover=\"hover\"\n        whileTap=\"pressed\"\n        viewBox=\"0 0 440 440\"\n        width=\"100%\"\n        height=\"100%\"\n        onClick={() => setIsChecked(!isChecked)}\n      >\n        <motion.path\n          d=\"M 72 136 C 72 100.654 100.654 72 136 72 L 304 72 C 339.346 72 368 100.654 368 136 L 368 304 C 368 339.346 339.346 368 304 368 L 136 368 C 100.654 368 72 339.346 72 304 Z\"\n          fill=\"transparent\"\n          strokeWidth=\"50\"\n          stroke=\"#FF008C\"\n          variants={boxVariants}\n        />\n        <motion.path\n          d=\"M 0 128.666 L 128.658 257.373 L 341.808 0\"\n          transform=\"translate(54.917 88.332) rotate(-4 170.904 128.687)\"\n          fill=\"transparent\"\n          strokeWidth=\"65\"\n          stroke=\"hsl(0, 0%, 100%)\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          variants={tickVariants}\n          style={{ pathLength, opacity }}\n          custom={isChecked}\n        />\n        <motion.path\n          d=\"M 0 128.666 L 128.658 257.373 L 341.808 0\"\n          transform=\"translate(54.917 68.947) rotate(-4 170.904 128.687)\"\n          fill=\"transparent\"\n          strokeWidth=\"65\"\n          stroke=\"#7700FF\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          variants={tickVariants}\n          style={{ pathLength, opacity }}\n          custom={isChecked}\n        />\n      </motion.svg>\n    </Box>\n  )\n}\n"],"file":"checkbox.js"}