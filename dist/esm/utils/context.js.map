{"version":3,"sources":["../../../src/utils/context.ts"],"names":["React","createContext","options","errorMessage","name","Context","undefined","displayName","useContext","context","error","Error","captureStackTrace","Provider"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AASA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,aAAT,GAAwE;AAAA,MAApCC,OAAoC,uEAAJ,EAAI;AAC7E,MAAM;AACJC,IAAAA,YAAY,GAAG,4FADX;AAEJC,IAAAA;AAFI,MAGFF,OAHJ;AAKA,MAAMG,OAAO,gBAAGL,KAAK,CAACC,aAAN,CAA6CK,SAA7C,CAAhB;AAEAD,EAAAA,OAAO,CAACE,WAAR,GAAsBH,IAAtB;;AAEA,WAASI,UAAT,GAAsB;AACpB,QAAMC,OAAO,GAAGT,KAAK,CAACQ,UAAN,CAAiBH,OAAjB,CAAhB;;AAEA,QAAI,CAACI,OAAL,EAAc;AAAA;;AACZ,UAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAUR,YAAV,CAAd;AACAO,MAAAA,KAAK,CAACN,IAAN,GAAa,cAAb;AACA,+BAAAO,KAAK,CAACC,iBAAN,qFAAAD,KAAK,EAAqBD,KAArB,EAA4BF,UAA5B,CAAL;AACA,YAAME,KAAN;AACD;;AAED,WAAOD,OAAP;AACD;;AAED,SAAO,CAACJ,OAAO,CAACQ,QAAT,EAAmBL,UAAnB,EAA+BH,OAA/B,CAAP;AACD","sourcesContent":["import * as React from 'react'\n\nexport interface CreateContextOptions {\n  errorMessage?: string\n  name?: string\n}\n\ntype CreateContextReturn<T> = [React.Provider<T>, () => T, React.Context<T>]\n\n/**\n * Creates a named context, provider, and hook.\n *\n * @param options create context options\n */\nexport function createContext<ContextType>(options: CreateContextOptions = {}) {\n  const {\n    errorMessage = 'useContext: `context` is undefined. Seems you forgot to wrap component within the Provider',\n    name,\n  } = options\n\n  const Context = React.createContext<ContextType | undefined>(undefined)\n\n  Context.displayName = name\n\n  function useContext() {\n    const context = React.useContext(Context)\n\n    if (!context) {\n      const error = new Error(errorMessage)\n      error.name = 'ContextError'\n      Error.captureStackTrace?.(error, useContext)\n      throw error\n    }\n\n    return context\n  }\n\n  return [Context.Provider, useContext, Context] as CreateContextReturn<ContextType>\n}\n"],"file":"context.js"}