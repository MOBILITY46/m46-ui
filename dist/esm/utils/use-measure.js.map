{"version":3,"sources":["../../../src/utils/use-measure.ts"],"names":["ResizeObserver","useCallbackRef","useState","useLayoutEffect","useMeasure","element","attachRef","bounds","setBounds","onResize","entry","width","height","contentRect","observer","observe","disconnect","ref"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,0BAA3B;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,OAA1C;AAEA,OAAO,SAASC,UAAT,GAAsB;AAC3B,MAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBL,cAAc,EAA3C;AACA,MAAM,CAACM,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,eAAe,CAAC,MAAM;AACpB,aAASM,QAAT,OAAkD;AAAA,UAAhC,CAACC,KAAD,CAAgC;AAChD,UAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAoBF,KAAK,CAACG,WAAhC;AACAL,MAAAA,SAAS,CAAC;AACRI,QAAAA,MADQ;AAERD,QAAAA;AAFQ,OAAD,CAAT;AAID;;AAED,QAAMG,QAAQ,GAAG,IAAId,cAAJ,CAAmBS,QAAnB,CAAjB;;AAEA,QAAIJ,OAAJ,EAAa;AACXS,MAAAA,QAAQ,CAACC,OAAT,CAAiBV,OAAjB;AACD;;AAED,WAAO,MAAM;AACXS,MAAAA,QAAQ,CAACE,UAAT;AACD,KAFD;AAGD,GAlBc,EAkBZ,CAACX,OAAD,CAlBY,CAAf;AAoBA,SAAO;AACLE,IAAAA,MADK;AAELU,IAAAA,GAAG,EAAEX;AAFA,GAAP;AAID","sourcesContent":["import ResizeObserver from 'resize-observer-polyfill'\nimport { useCallbackRef } from './use-callback-ref'\nimport { useState, useLayoutEffect } from 'react'\n\nexport function useMeasure() {\n  const [element, attachRef] = useCallbackRef()\n  const [bounds, setBounds] = useState({})\n\n  useLayoutEffect(() => {\n    function onResize([entry]: ResizeObserverEntry[]) {\n      const { width, height } = entry.contentRect\n      setBounds({\n        height,\n        width,\n      })\n    }\n\n    const observer = new ResizeObserver(onResize)\n\n    if (element) {\n      observer.observe(element as any)\n    }\n\n    return () => {\n      observer.disconnect()\n    }\n  }, [element])\n\n  return {\n    bounds,\n    ref: attachRef,\n  }\n}\n"],"file":"use-measure.js"}